# coding=utf-8

import sys
import os
import argparse

_home_dir = os.environ['${PROJECT_NAME}_HOME']
if _home_dir not in sys.path:
    sys.path.append(_home_dir)

from flask import Flask

from ${project_name} import config
from ${project_name}.app import read_config
from ${project_name}.db import db
from ${project_name} import model  # import models

import logging

log = logging.getLogger(__name__)


def init_db(argv=None):
    if argv is None:
        argv = sys.argv
    parser = argparse.ArgumentParser()
    parser.usage = '[options]'
    parser.description = 'initialize database'
    parser.add_argument('-f', dest='force', action='store_true', default=False,
                        help='force creating all tables')
    args = parser.parse_args(args=argv[1:])
    read_config()
    app = Flask(__name__)
    app.config['SQLALCHEMY_DATABASE_URI'] = config.database_uri
    db.init_app(app)
    with app.app_context():
        if args.force:
            db.drop_all()
        else:
            print("The tables already exist will not be recreated. "
                  "Try '-f' option to force creating all tables.", file=sys.stdout)
        db.create_all()


if __name__ == '__main__':
    init_db()
